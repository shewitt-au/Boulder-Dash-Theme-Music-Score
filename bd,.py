#!/usr/bin/env python3

from math import log

bd_sid_values = [
0xdc, 0x02, 0x0a, 0x03,  0x3a, 0x03, 0x6c, 0x03,  0xa0, 0x03, 0xd2, 0x03,  0x12, 0x04, 0x4c, 0x04,
0x92, 0x04, 0xd6, 0x04,  0x20, 0x05, 0x6e, 0x05,  0xb8, 0x05, 0x14, 0x06,  0x74, 0x06, 0xd8, 0x06,
0x40, 0x07, 0xa4, 0x07,  0x24, 0x08, 0x98, 0x08,  0x24, 0x09, 0xac, 0x09,  0x40, 0x0a, 0xdc, 0x0a,
0x70, 0x0b, 0x28, 0x0c,  0xe8, 0x0c, 0xb0, 0x0d,  0x80, 0x0e, 0x48, 0x0f,  0x48, 0x10, 0x30, 0x11,
0x48, 0x12, 0x58, 0x13,  0x80, 0x14, 0xb8, 0x15,  0xe0, 0x16, 0x50, 0x18,  0xd0, 0x19, 0x60, 0x1b,
0x00, 0x1d, 0x90, 0x1e,  0x90, 0x20, 0x60, 0x22,  0x90, 0x24, 0xb0, 0x26,  0x00, 0x29, 0x70, 0x2b,
0xc0, 0x2d]

def chunks():
	i = iter(bd_sid_values)
	try:
		while True:
			yield next(i)+next(i)*256
	except StopIteration:
		return

f0 = 435.97705078124994
a = 2**(1/12)

# http://www.cbmitapages.it/c64/sid1eng.htm
# https://codebase64.org/doku.php?id=base:how_to_calculate_your_own_sid_frequency_table
# https://csdb.dk/forums/?roomid=11&topicid=124823&firstpost=2

pal_const =  (256**3)/985248
ntsc_const = (256**3)/1022727

def reg_to_freq_pal(reg):
	return reg/pal_const

def freq_to_reg_pal(f):
	return int(f*pal_const+0.5)

def reg_to_freq_ntsc(reg):
	return reg/ntsc_const

def freq_to_reg_ntsc(f):
	return int(f*ntsc_const+0.5)

def note_to_freq(n):
	return f0*a**n

def freq_to_note(f):
	return log(f/f0, a)

if __name__=='__main__':
	for v in chunks():
		print(round(freq_to_note(reg_to_freq_pal(v))))
